version: "2.4"


services:
  cdnjs:
    image: mterron/sri
    read_only: true
    restart: always
    healthcheck:
      test: 
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 60s
    volumes:
      - data:/data
    tmpfs:
      - /tmp
      - /run:mode=770
    environment:
      TZ: ${TZ}
      PGUSER: postgres
      PGPASSWORD: changeme
      PGHOST: db
      PGPORT: 5432
      PGDATABASE: postgres
      DEBUG: 1
    cap_drop:
      - ALL
    depends_on:
      - db

  postgrest:
    image: postgrest/postgrest
    restart: always
    environment:
      TZ: ${TZ}
      PGUSER: ${POSTGRES_USER:-postgres}
      PGPASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGHOST: db
      PGPORT: 5432
      PGDATABASE: postgres
      PGRST_DB_URI: "postgres://"
      PGRST_DB_ANON_ROLE: api_anonymous
      PGRST_MAX_ROWS: 100
    cap_drop:
      - ALL
    depends_on:
      - db

  db:
    image: postgres:alpine
#    read_only: true
    restart: always
    # user: postgres
    environment:
      TZ: ${TZ}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    healthcheck:
      test: pg_isready -q -h $$HOSTNAME -U $$POSTGRES_USER
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 60s
    shm_size: '256mb'
    tmpfs:
      - /tmp
      - /run:mode=770
    volumes:
      - db:/var/lib/postgresql
    networks:
      default:
        aliases:
          - postgres
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
      - FOWNER
    ports:
      - "5432"


volumes:
  data:
  db:
